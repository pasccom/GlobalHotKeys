/*! \mainpage
 
	\section Introduction
		I wrote GlobalHotKeys because I happen to often have a lot of windows open on my desktop. In this case, using <tt>Alt(+Shift)+Tab</tt> is not very handy as you may have to browse through a lot of windows to find the one you are interested in. Of course, going to the task bar may be a solution, by it is almost as unpactical from my point of view.
		
		The second problem I wanted to solve is that as a French, I have to know the <tt>ALT+xxxx</tt>  to write correct French on a standard French keyboard.
		
		Lastly I took the opportunity to let the user defines custom keyboard shortcuts as he wants. This functionnality shouuld be used with care however because it could yield problematic conflicts.

\section Installation
	GlobalHotKeys is developed in C# and was tested against 4.0 and 4.5 versions of the .NET framework. It uses Apache log4net, which is distibuted along the program under compiled form in the \c lib/ folder.
	
	To log to Windows event log, a log folder named Pascom should be created. This can be done using the following PowerShell command with administrator priviledges.
	\code
		New-EventLog -LogName Pascom -Source GlobalHotKeys
	\endcode
	
	I personnally advise to add GlobalHotkeys as a planned task when session opens. This can easily be done using the [TODO].

\section Configuration
	Currently GlobalHotKeys uses two configuration files
		\li The first defines the processes GlobalHotKeys can startup. This file should not be editable by an ordinary user (for security related problems). It should belong to either the Admin user or the System user
		\li The second lists the user-defined shortcuts. It can be edited by an ordinary user
	As of now these files should follow a plain text format. Examples of such files are distributed along with the code. See files \c globalhotkeys.processes.conf and \c globalhotkeys.conf.
	
	To write the \c globalhotkeys.conf file you will need to look at the documentation of GlobalHotKeys.Shortcuts.Handler, GlobalHotKeys.Windows.Manager and GlobalHotKeys.Power.Manager classes for the available features. A list of the callable functions and their arguments is given in the descriptions of these classes.
	
\section {Future developments}
	I give here some ideas, I should implement in the future. If you want to implement an idea from this list or any other idea you may have please send me an email.
	
	\li Put the functionalities of the Windows and the Power namespace into separate plugins, so that the used does not need to load every code he does not need. This will be useful when GlobalHotKeys has a lot of functionnalities.
	
	\li Implement new formats for the configuration. For instance I would like to have XML configuration available.
	
	\li Develop a graphic tool to write GlocbalHotKeys config files.
*/